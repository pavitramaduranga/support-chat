// <auto-generated />
using System;
using AgentCoordination.CLI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgentCoordination.CLI.Migrations
{
    [DbContext(typeof(CoordinatorDbContext))]
    [Migration("20220921070228_SeniorityDataUpdate")]
    partial class SeniorityDataUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0-rc.1.22426.7");

            modelBuilder.Entity("Support.Chat.Portal.Common.Models.Agent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<short>("SeniorityId")
                        .HasColumnType("INTEGER");

                    b.Property<short>("TeamId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SeniorityId");

                    b.HasIndex("TeamId");

                    b.ToTable("Agents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Robert",
                            SeniorityId = (short)1,
                            TeamId = (short)1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Chris",
                            SeniorityId = (short)4,
                            TeamId = (short)1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Josh",
                            SeniorityId = (short)2,
                            TeamId = (short)1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Evans",
                            SeniorityId = (short)2,
                            TeamId = (short)1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Scarlett",
                            SeniorityId = (short)3,
                            TeamId = (short)2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Tom",
                            SeniorityId = (short)2,
                            TeamId = (short)2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Mark",
                            SeniorityId = (short)1,
                            TeamId = (short)2
                        },
                        new
                        {
                            Id = 8,
                            Name = "Elizabeth",
                            SeniorityId = (short)1,
                            TeamId = (short)2
                        },
                        new
                        {
                            Id = 9,
                            Name = "Paul",
                            SeniorityId = (short)2,
                            TeamId = (short)3
                        },
                        new
                        {
                            Id = 10,
                            Name = "Benedict",
                            SeniorityId = (short)2,
                            TeamId = (short)3
                        },
                        new
                        {
                            Id = 11,
                            Name = "Peter",
                            SeniorityId = (short)1,
                            TeamId = (short)4
                        },
                        new
                        {
                            Id = 12,
                            Name = "Bradly",
                            SeniorityId = (short)1,
                            TeamId = (short)4
                        },
                        new
                        {
                            Id = 13,
                            Name = "Idris",
                            SeniorityId = (short)1,
                            TeamId = (short)4
                        },
                        new
                        {
                            Id = 14,
                            Name = "Ross",
                            SeniorityId = (short)1,
                            TeamId = (short)4
                        },
                        new
                        {
                            Id = 15,
                            Name = "Ariana",
                            SeniorityId = (short)1,
                            TeamId = (short)4
                        },
                        new
                        {
                            Id = 16,
                            Name = "Tiffany",
                            SeniorityId = (short)1,
                            TeamId = (short)4
                        });
                });

            modelBuilder.Entity("Support.Chat.Portal.Common.Models.Seniority", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AssignOrder")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Efficiency")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Seniorities");

                    b.HasData(
                        new
                        {
                            Id = (short)1,
                            AssignOrder = 0,
                            Efficiency = 0.40000000000000002,
                            Name = "Junior"
                        },
                        new
                        {
                            Id = (short)2,
                            AssignOrder = 0,
                            Efficiency = 0.59999999999999998,
                            Name = "MidLevel"
                        },
                        new
                        {
                            Id = (short)3,
                            AssignOrder = 0,
                            Efficiency = 0.80000000000000004,
                            Name = "Senior"
                        },
                        new
                        {
                            Id = (short)4,
                            AssignOrder = 0,
                            Efficiency = 0.5,
                            Name = "TeamLead"
                        });
                });

            modelBuilder.Entity("Support.Chat.Portal.Common.Models.SupportRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Resolved")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SupportRequests");
                });

            modelBuilder.Entity("Support.Chat.Portal.Common.Models.Team", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsOverflow")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Shift")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = (short)1,
                            IsOverflow = true,
                            Name = "Team A",
                            Shift = 1
                        },
                        new
                        {
                            Id = (short)2,
                            IsOverflow = false,
                            Name = "Team B",
                            Shift = 2
                        },
                        new
                        {
                            Id = (short)3,
                            IsOverflow = false,
                            Name = "Team C",
                            Shift = 3
                        },
                        new
                        {
                            Id = (short)4,
                            IsOverflow = false,
                            Name = "Overflow",
                            Shift = 0
                        });
                });

            modelBuilder.Entity("Support.Chat.Portal.Common.Models.Agent", b =>
                {
                    b.HasOne("Support.Chat.Portal.Common.Models.Seniority", "Seniority")
                        .WithMany()
                        .HasForeignKey("SeniorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Support.Chat.Portal.Common.Models.Team", "Team")
                        .WithMany("Agents")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seniority");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Support.Chat.Portal.Common.Models.Team", b =>
                {
                    b.Navigation("Agents");
                });
#pragma warning restore 612, 618
        }
    }
}
